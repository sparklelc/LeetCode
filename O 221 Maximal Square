Mid:
221 Maximal Square
找最大的正方形
Given a 2D binary matrix filled with 0's and 1's, find the largest square containing all 1's and return its area.
For example, given the following matrix:
  1 0 1 0 0
  1 0 1 1 1
  1 1 1 1 1
  1 0 0 1 0
Return 4.


我的思路：
  动态规划
  arr[i][j] = Math.min(arr[i-1][j], arr[i][j-1], arr[i-1][j-1])+1    if matrix[i][j]=='1'
            = 0                                                      if matrix[0][0]=='0'
扩展：那么对于长方形是不是需要两个二维数组一个存长度一个存宽度？


//我的代码
public class Solution {
    public int maximalSquare(char[][] matrix) {
        int result = 0;
        if (matrix == null || matrix.length == 0) return result;
        int[][] arr = new int[matrix.length+1][matrix[0].length+1];
        for (int i=1; i<=matrix.length; i++) 
            for (int j=1; j<=matrix[0].length; j++) {
                if (matrix[i-1][j-1] == '0')
                    arr[i][j] = 0;
                else {
                    arr[i][j] = Math.min(Math.min(arr[i-1][j], arr[i][j-1]), arr[i-1][j-1])+1;
                    result = Math.max(result, arr[i][j]);
                }
            }
        return result*result;
    }
}
