Easy:
Given a positive integer, return its corresponding column title as appear in an Excel sheet.
For example:
    1 -> A
    2 -> B
    3 -> C
    ...
    26 -> Z
    27 -> AA
    28 -> AB 
    

注意：
从1开始算，而不是0，debug了很久。



//别人代码：
public class Solution {
    public String convertToTitle(int n) {
        StringBuilder result = new StringBuilder();

        while(n>0){
            n--;                                              //关键
            result.insert(0, (char)('A' + n % 26));
            n /= 26;
        }

        return result.toString();
    }
}


//我的代码：
public class Solution {
    public String convertToTitle(int n) {
        StringBuilder builder = new StringBuilder();
        while (true) {
            int c = n % 26;
            Character ch = (char) ('A' + c - 1);
            if (c == 0)
                ch = 'Z';
            builder.insert(0, ch.toString());
            if (n <= 26)
                break;
            n /= 26;
            if (c == 0)
                n -= 1;
        }
        return builder.toString();
    }
}

************************************
Easy:
169 Majority Element
Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.
You may assume that the array is non-empty and the majority element always exist in the array.
最大元素出现次数 > n/2.


每次去掉两个不同的数，但代码可以写的很简单。


别人代码：
public class Solution {
    public int majorityElement(int[] num) {

        int major=num[0], count = 1;
        for(int i=1; i<num.length;i++){
            if(count==0){                                                   
                count++;
                major=num[i];
            }else if(major==num[i]){               // 相同则count+1
                count++;
            }else count--;                         // 不同则count-1

        }
        return major;
    }
}
