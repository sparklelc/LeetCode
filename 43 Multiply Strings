把两个String类型的数字相乘得到一个String类型的结果，数字可能很大

我用Stringbuffer的reverse()来做，其实用int[]来存储可能会好一点。
Stringbuffer一开始先把所有位置成‘0’，然后最后的时候要把前面的'0'去掉，如“00123”

我的代码如下：
public class Solution {
    public String multiply(String num1, String num2) {
        StringBuffer buf1 = new StringBuffer(num1);
        StringBuffer buf2 = new StringBuffer(num2);
        buf1.reverse();
        buf2.reverse();
        StringBuffer result = new StringBuffer(num1.length()+num2.length());
        for(int i=0; i<num1.length()+num2.length(); i++){
            result.append('0');
        }
        for(int i=0; i<num1.length(); i++){
            for(int j=0; j<num2.length(); j++){
                int temresult = (buf2.charAt(j)-'0')*(buf1.charAt(i)-'0');
                int min = temresult % 10;
                int plus = temresult / 10;
                int plusindex = i+j+1;
                
                int thisnum = result.charAt(i+j) - '0' + min;
                result.setCharAt(i+j,(char)(thisnum % 10+'0'));
                plus += thisnum / 10;
                while(plus!=0){
                    int plusnum = result.charAt(plusindex) - '0';
                    plus += plusnum;
                    result.setCharAt(plusindex, (char)(plus % 10+'0'));
                    plus = plus/10;
                    plusindex++;
                }
                
            }
        }
        int len=0;
        result.reverse();
        for(int i=0; i<num1.length()+num2.length();i++){
            if(result.charAt(i)=='0')
                len++;
            else
                break;
        }
        if(len == num1.length()+num2.length())
            len--;
        return (new String(result)).substring(len, num1.length()+num2.length());
    }
}
