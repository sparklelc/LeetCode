public class Solution {
    public String longestPalindrome(String s) {
        String maxstr = "";
        for(int i=0;i<s.length();i++){
            String temstr=findPath(i,i,s);
            if(temstr.length()>maxstr.length())
                maxstr=temstr;
        }
        for(int i=0;i<s.length()-1;i++){
            if(s.charAt(i)==s.charAt(i+1)){
                String temstr=findPath(i,i+1,s);
                if(temstr.length()>maxstr.length())
                    maxstr=temstr;
            }
        }
        return maxstr;        
    }
    
    public String findPath(int start, int end, String s) {
        int maxlen = 0;
        start --;
        end ++;
        while(start>=0 && end<s.length() && s.charAt(start)==s.charAt(end)){
            start --;
            end ++;
        }
            return s.substring(++start,end);
    }
}
分为单双两种情况，找到基本单元，向外扩展
