Easy-Mid
题目：Given board =
[
  ['A','B','C','E'],
  ['S','F','C','S'],
  ['A','D','E','E']
]
word = "ABCCED", -> returns true,
word = "SEE", -> returns true,
word = "ABCB", -> returns false.

我的代码：递归，回溯
public class Solution {
    public boolean exist(char[][] board, String word) {
        if(board.length == 0)
            return false;
            
        boolean[][] used = new boolean[board.length][board[0].length];    
        for(int i=0;i<board.length;i++){
            for(int j=0; j<board[0].length;j++)
                if(find(board,word,0,i,j,used))
                    return true;
        }
        return false;
    }
    
    public boolean find(char[][]board, String word, int index, int i, int j, boolean[][] used){
        boolean result = false;
        if(index==word.length())
            return true;
        if(i<0 || i>=board.length || j<0 || j>=board[0].length || used[i][j])
            return false;
        if(board[i][j] != word.charAt(index))
            return false;
        used[i][j] = true;
        result = find(board, word, index+1, i+1, j, used) || find(board, word, index+1, i-1, j, used) || find(board, word, index+1, i, j+1, used) || find(board, word, index+1, i, j-1, used);
        if(!result)
            used[i][j] = false;
        return result;
    }
}
