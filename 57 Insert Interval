题目：
Example 1:
Given intervals [1,3],[6,9], insert and merge [2,5] in as [1,5],[6,9].

Example 2:
Given [1,2],[3,5],[6,7],[8,10],[12,16], insert and merge [4,9] in as [1,2],[3,10],[12,16].

This is because the new interval [4,9] overlaps with [3,5],[6,7],[8,10].

和上题类似，思路不难，遍历一次就可以
我的代码如下：
/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public List<Interval> insert(List<Interval> intervals, Interval newInterval) {
        int start = newInterval.start;
        int end = newInterval.end;
        int startindex = -1;
        int endindex = -1;
        //boolean merge = false;
        boolean nonused = true;
        LinkedList<Interval> result = new LinkedList<Interval>();
        
        for(Interval inter:intervals){
            if(inter.start <= start && start <=inter.end){
                start = inter.start;
                end = Math.max(end, inter.end);
            }
            else if(inter.start <= end && end <= inter.end){
                start = Math.min(start, inter.start);
                end = inter.end;
            }
            else if(start > inter.end){
                result.addLast(inter);
            }
            else if(inter.start > end){
                if(nonused){
                    result.addLast(new Interval(start, end));
                    nonused = false;
                }
                result.addLast(inter);
            }
        }
        if(nonused) result.addLast(new Interval(start, end));
        return result;
    }
}
